//Q 바이러스가 서버실에 있는 컴퓨터를 감염시켰습니다. 이에 재우 박사는 Q 바이러스에 대항할 백신Q를 개발하였습니다.
//백신 Q는 전파력이 좋아서 한 컴퓨터에 설치 되면 , 그 컴퓨터와 '네트워크 상에서 연결되어 있는 모든 컴퓨터'들에 백신이 전파가 됩니다.
//(같은 네트워크상에서 컴퓨터끼리는 '상,하,좌,우로 연결되어있습니다.)
//재우 박사는 백신Q를 개수를최소한으로설치하여 바이러스에 감염된 컴퓨터들을 치료하고 싶습니다.
//백신Q를 최소 몇개를 설치를 해야 감염된 컴퓨터들을 모두 치료할 수 있는지 최소 설치 갯수를 출력하세요.

#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <queue>
#include <cstring>

using namespace std;

struct Point
{
    int y;
    int x;
};

int dy[4] = { -1, 1, 0, 0 };
int dx[4] = { 0, 0, -1, 1 };

int MAP[150][150];
int visited[150][150];
int N, M;

void bfs(Point st)
{
    queue<Point> q;

    MAP[st.y][st.x] = 1;
    visited[st.y][st.x] = 1;
    q.push(st);
    while (!q.empty())
    {
        Point now = q.front();
        q.pop();
        for (int i = 0; i < 4; i++)
        {
            Point next = { 0 };
            next.y = now.y + dy[i];
            next.x = now.x + dx[i];
            
            if (next.y < 0 || next.x < 0 || next.y >= N || next.x >= N)
            {
                continue;
            }
            if (MAP[next.y][next.x] == 0)
            {
                continue;
            }
            if (visited[next.y][next.x] == 1)
            {
                continue;
            }

            MAP[next.y][next.x] = 1;
            visited[next.y][next.x] = 1;
            q.push(next);
        }
    }
}

int main()
{
    // freopen("sample_input.txt", "r", stdin);
    cin >> N >> M;
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < M; j++)
        {
            cin >> MAP[i][j];
        }
    }

    int cnt = 0;
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < M; j++)
        {
            if (MAP[i][j] == 0 || MAP[i][j] == 1)
            {
                continue;
            }
            bfs({ i, j });
            memset(visited, 0, sizeof(visited));
            cnt++;
        }
    }
    cout << cnt;
}
