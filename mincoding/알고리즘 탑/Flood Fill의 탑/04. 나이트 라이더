//나이트는 독특한 움직임을 갖습니다.
//맵 사이즈 크기와나이트라이더, 타겟의 좌표가 입력으로 주어질 때,
//나이트 라이더가 타겟을 잡기 위한 최소 이동거리를 출력해 주세요.

#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <queue>

using namespace std;

struct Point
{
    int y;
    int x;
};

int height, width;
int MAP[100][100];
int dy[8] = { -2, -1, 1, 2, 2, 1, -1, -2 };
int dx[8] = { 1, 2, 2, 1, -1, -2, -2, -1 };

int bfs(Point st, Point target)
{
    queue<Point> q;
    q.push(st);

    while (!q.empty())
    {
        Point now = q.front();
        q.pop();

        for (int i = 0; i < 8; i++)
        {
            Point next = { 0 };
            next.y = now.y + dy[i];
            next.x = now.x + dx[i];
            if (next.y == st.y && next.x == st.x) continue;
            if (next.y < 0 or next.x < 0 or next.y >= height or next.x >= width) continue;
            if (MAP[next.y][next.x] != 0) continue;

            MAP[next.y][next.x] = MAP[now.y][now.x] + 1;

            if (next.y == target.y and next.x == target.x)
            {
                return MAP[next.y][next.x];
            }

            q.push(next);
        }
    }
}

int main()
{
    //freopen("sample_input.txt", "r", stdin);
    cin >> height >> width;
    Point st = { 0 };
    Point target = { 0 };
    int y, x;
    cin >> y >> x;
    st.y = y - 1;
    st.x = x - 1;
    cin >> y >> x;
    target.y = y - 1;
    target.x = x - 1;

    int cnt = bfs(st, target);

    cout << cnt;
}
